start = year,
end = year)
# load the total unemployment
unemployment <-  WDI(indicator = indicator_unemployment_total,
country = countries,
start = year,
end = year)
# Compute the correlation between the total unemployment and the GDP per capita
corr_gdp_unemployment_this_year <- signif(cor(unemployment[,3], gdp_per_capita[,3]), 3)
# permutation test for this year
N <- 10000
# vector with the results of the test statistic under each permutation
corr_gdp_unemployment_permutation_test <- numeric(length = N)
for(i in 1:N)
{
unemployment_shufled <- unemployment[sample(nrow(unemployment)),]
corr_gdp_unemployment_permutation_test[i] <- cor(unemployment_shufled[,3],
gdp_per_capita[,3])
}
p_value_Cor <- (sum(corr_gdp_unemployment_permutation_test<=corr_gdp_unemployment_this_year)+1)/length(corr_gdp_unemployment_permutation_test)
# bootstrap analysis for this year
M <- 10000
corr_gdp_unemployment_bootstrap <- numeric(M)
for(i in 1:M)
{
sampling_indices <- sample(seq(1, length(unemployment[,3]), by=1), size=num_countries, replace=TRUE)
corr_gdp_unemployment_bootstrap[i] <- cor(unemployment[,3][sampling_indices], gdp_per_capita[,3][sampling_indices])
}
bt_mean <- signif(mean(corr_gdp_unemployment_bootstrap), 3)
bt_std <- signif(sd(corr_gdp_unemployment_bootstrap), 3)
print(paste(year, corr_gdp_unemployment_this_year, bt_mean, bt_std, p_value_Cor))
years <- append(years, year)
coefs <- append(coefs, corr_gdp_unemployment_this_year)
btmeans <- append(btmeans, bt_mean)
btstd <- append(btstd, bt_std)
pvalues <- append(pvalues, p_value_Cor)
}
qplot(years, coefs) + geom_errorbar(aes(x=years, ymin=coefs-btstd, ymax=coefs+btstd), width=0.25) + ggtitle("Longitudinal analysis") + xlab("Year") + ylab("Correlation coefficient")
compute_correlation <- function(indc_gdp, indc_employ, countries, year)
{
gdp_per_capita <- WDI(indicator = indc_gdp, country = countries, start = year, end = year) # load the GDP per capita
unemployment <-  WDI(indicator = indc_employ, country = countries, start = year, end = year) # load the total unemployment
corr <- signif(cor(unemployment[,3], gdp_per_capita[,3]), 3) # Compute correlation
# Permutation test to compute the statistical significance of the correlation
N <- 10000
corr_perm_test <- numeric(length = N)
for(i in 1:N)
{
unemployment_shufled <- unemployment[sample(nrow(unemployment)),]
corr_perm_test[i] <- cor(unemployment_shufled[,3], gdp_per_capita[,3])
}
p_value <- signif((sum(corr_perm_test<=corr)+1)/length(corr_perm_test), 3)
# Bootstrapping to obtain an uncertainty on the correlation coefficient
M <- 10000
corr_bootstrap <- numeric(M)
for(i in 1:M)
{
sampling_indices <- sample(seq(1, length(unemployment[,3]), by=1), size=num_datapoints, replace=TRUE)
corr_bootstrap[i] <- cor(unemployment[,3][sampling_indices], gdp_per_capita[,3][sampling_indices])
}
bt_mean <- signif(mean(corr_bootstrap), 3)
bt_std <- signif(sd(corr_bootstrap), 3)
cor_list <- list("year" = year, "coef" = corr, "btmean" = bt_mean, "btstd" = bt_std, "p" = p_value)
return(cor_list)
}
cor_total <- compute_correlation(indicator_gdp_per_capita, indicator_unemployment_total, countries, 2015)
cor_youth <- compute_correlation(indicator_gdp_per_capita, indicator_unemployment_youth, countries, 2015)
cor_male <- compute_correlation(indicator_gdp_per_capita, indicator_unemployment_male, countries, 2015)
cor_female <- compute_correlation(indicator_gdp_per_capita, indicator_unemployment_female, countries, 2015)
group_coefs <- c(cor_total$coef, cor_youth$coef, cor_male$coef, cor_female$coef)
group_btmean <- c(cor_total$btmean, cor_youth$btmean, cor_male$btmean, cor_female$btmean)
group_btstd <- c(cor_total$btstd, cor_youth$btstd, cor_male$btstd, cor_female$btstd)
group_pvalues <- c(cor_total$p, cor_youth$p, cor_male$p, cor_female$p)
correlation_group_analysis <- data.frame(group_coefs, group_btmean, group_btstd, group_pvalues)
rownames(correlation_group_analysis) <- c("Total", "Youth", "Male", "Female")
kable(correlation_group_analysis,  col.names = c("Correlation",
"Bootstrapping mean",
"Bootstrapping std. dev.",
"P-value")) %>% kable_material(c("striped", "hover"))
cor_agri <- compute_correlation(indicator_gdp_per_capita, indicator_employment_agriculture, countries, 2015)
cor_indus <- compute_correlation(indicator_gdp_per_capita, indicator_employment_industry, countries, 2015)
cor_serv <- compute_correlation(indicator_gdp_per_capita, indicator_employment_services, countries, 2015)
sector_coefs <- c(cor_agri$coef, cor_indus$coef, cor_serv$coef)
sector_btmean <- c(cor_agri$btmean, cor_indus$btmean, cor_serv$btmean)
sector_btstd <- c(cor_agri$btstd, cor_indus$btstd, cor_serv$btstd)
sector_pvalues <- c(cor_agri$p, cor_indus$p, cor_serv$p)
correlation_sector_analysis <- data.frame(sector_coefs, sector_btmean, sector_btstd, sector_pvalues)
rownames(correlation_sector_analysis) <- c("Agriculture", "Industry", "Services")
kable(correlation_sector_analysis,  col.names = c("Correlation",
"Bootstrapping mean",
"Bootstrapping std. dev.",
"P-value")) %>% kable_material(c("striped", "hover"))
# Dataframe merging
gdp_per_capita <- WDI(indicator = indicator_gdp_per_capita,
country = countries,
start = start_year,
end = end_year)
unemployment <-  WDI(indicator = indicator_unemployment_total,
country = countries,
start = start_year,
end = end_year)
unemployment_youth <-  WDI(indicator = indicator_unemployment_youth,
country = countries,
start = start_year,
end = end_year)
unemployment_male <-  WDI(indicator = indicator_unemployment_male,
country = countries,
start = start_year,
end = end_year)
unemployment_female <-  WDI(indicator = indicator_unemployment_female,
country = countries,
start = start_year,
end = end_year)
employment_agr <-  WDI(indicator = indicator_employment_agriculture,
country = countries,
start = start_year,
end = end_year)
employment_industry <-  WDI(indicator = indicator_employment_industry,
country = countries,
start = start_year,
end = end_year)
employment_services <-  WDI(indicator = indicator_employment_services,
country = countries,
start = start_year,
end = end_year)
onedf <- merge(gdp_per_capita, unemployment)
onedf <- merge(merge(merge(merge(merge(merge(onedf, unemployment_youth), unemployment_female), unemployment_male), employment_agr), employment_industry), employment_services)
onedf <- onedf %>%
rename(
unemployment = SL.UEM.TOTL.NE.ZS,
gdp_per_capita = NY.GDP.PCAP.KD,
unemployment_youth = SL.UEM.1524.NE.ZS,
unemployment_male = SL.UEM.TOTL.MA.NE.ZS,
unemployment_female = SL.UEM.TOTL.FE.NE.ZS,
employment_agr = SL.AGR.EMPL.ZS,
employment_industry = SL.IND.EMPL.ZS,
employment_services = SL.SRV.EMPL.ZS
)
onedf_filt <- filter(onedf, year==2015)
# Mediation analysis (GDP, unemp_youth, empl_agr)
agr_dep_var <- onedf_filt$gdp
agr_indep_var <- onedf_filt$employment_agr
agr_indep_var_fem <- onedf_filt$employment_agr
agr_mediator <- onedf_filt$unemployment_youth
agr_mediator_fem <- onedf_filt$unemployment_female
agr_df_mediation <- data.frame(agr_indep_var,agr_mediator,agr_dep_var)
agr_df_mediation_fem <- data.frame(agr_indep_var_fem,agr_mediator_fem,agr_dep_var)
agr.totaleffect=lm(agr_dep_var~agr_indep_var, agr_df_mediation)
#summary(agr.totaleffect)
agr.totaleffect_fem=lm(agr_dep_var~agr_indep_var_fem, agr_df_mediation_fem)
#summary(agr.totaleffect_fem)
agr.agr_mediator=lm(agr_mediator~agr_indep_var,agr_df_mediation)
#summary(agr.agr_mediator)
agr.agr_mediator_fem=lm(agr_mediator_fem~agr_indep_var_fem,agr_df_mediation_fem)
#summary(agr.agr_mediator_fem)
agr.dv=lm(agr_dep_var~agr_indep_var+agr_mediator,agr_df_mediation)
#summary(agr.dv)
agr.dv_fem=lm(agr_dep_var~agr_indep_var_fem+agr_mediator_fem,agr_df_mediation_fem)
#summary(agr.dv_fem)
agr_results = mediate(agr.agr_mediator, agr.dv, treat='agr_indep_var', mediator='agr_mediator', boot=F)
#summary(agr_results)
agr_results_fem = mediate(agr.agr_mediator_fem, agr.dv_fem, treat='agr_indep_var_fem', mediator='agr_mediator_fem', boot=F)
#summary(agr_results_fem)
plot(agr_indep_var, agr_dep_var, xlab="Employment in agriculture %",
ylab="GDP per capita (constant 2010 USD)", main="Scatter Plot of GDP per cap ~ Employment in agriculture", pch=19,
col=c("blue"))
agr_group_tot <- c(agr.totaleffect$coefficients[2],agr.totaleffect_fem$coefficients[2])
agr_group_tot_p <- c(summary(agr.totaleffect)$coefficients[2,4], summary(agr.totaleffect_fem)$coefficients[2,4])
agr_group_mediator <- c(agr.agr_mediator$coefficients[2],agr.agr_mediator_fem$coefficients[2])
agr_group_mediator_p <- c(summary(agr.agr_mediator)$coefficients[2,4], summary(agr.agr_mediator_fem)$coefficients[2,4])
agr_group_IM <- c(agr.dv$coefficients[2],agr.dv_fem$coefficients[2])
agr_group_IM_med <- c(agr.dv$coefficients[3],agr.dv_fem$coefficients[3])
agr_group_IM_p <- c(summary(agr.dv)$coefficients[2,4], summary(agr.dv_fem)$coefficients[2,4])
agr_group_IM_med_p <- c(summary(agr.dv)$coefficients[3,4], summary(agr.dv_fem)$coefficients[3,4])
agr_group_dv <- c(agr_results$d0, agr_results_fem$d0)
agr_group_dv_p <- c(agr_results$d0.p, agr_results_fem$d0.p)
agr_group_analysis <- data.frame(agr_group_tot,agr_group_tot_p, agr_group_mediator, agr_group_mediator_p, paste(round(agr_group_IM,3), round(agr_group_IM_med,3) , sep="/"),paste(round(agr_group_IM_p,3), round(agr_group_IM_med_p,3) , sep="/"),agr_group_dv, agr_group_dv_p)
agr_group_analysis %>% mutate_if(is.numeric, round, digits=3) -> agr_group_analysis
rownames(agr_group_analysis) <- c("Youth", "Female")
kable(agr_group_analysis, col.names = c("I->D",
"p-value",
"I->M",
"p-value",
"I+M->D",
"p-value",
"ACME",
"p-value"),caption = "Sector: Agriculture Linear regression coefficients, p-values obtained from mediation analysis. For the column I+M -> D, coefficients for I and M from the joint regression are shown. ACME is the Average Causal Mediation Effect") %>% kable_material(c("striped", "hover"))
# Mediation analysis (GDP, unemp_youth, empl_ind)
# ==========================================
# Mediation
# ==========================================
ind_dep_var <- onedf_filt$gdp
ind_indep_var <- onedf_filt$employment_industry
ind_indep_var_fem <- onedf_filt$employment_industry
ind_mediator <- onedf_filt$unemployment_youth
ind_mediator_fem <- onedf_filt$unemployment_female
ind_df_mediation <- data.frame(ind_indep_var,ind_mediator,ind_dep_var)
ind_df_mediation_fem <- data.frame(ind_indep_var_fem,ind_mediator_fem,ind_dep_var)
ind.totaleffect=lm(ind_dep_var~ind_indep_var, ind_df_mediation)
#summary(ind.totaleffect)
ind.totaleffect_fem=lm(ind_dep_var~ind_indep_var_fem, ind_df_mediation_fem)
#summary(ind.totaleffect_fem)
ind.ind_mediator=lm(ind_mediator~ind_indep_var,ind_df_mediation)
#summary(ind.ind_mediator)
ind.ind_mediator_fem=lm(ind_mediator_fem~ind_indep_var_fem,ind_df_mediation_fem)
#summary(ind.ind_mediator_fem)
ind.dv=lm(ind_dep_var~ind_indep_var+ind_mediator,ind_df_mediation)
#summary(ind.dv)
ind.dv_fem=lm(ind_dep_var~ind_indep_var_fem+ind_mediator_fem,ind_df_mediation_fem)
#summary(ind.dv_fem)
ind_results = mediate(ind.ind_mediator, ind.dv, treat='ind_indep_var', mediator='ind_mediator', boot=F)
#summary(ind_results)
ind_results_fem = mediate(ind.ind_mediator_fem, ind.dv_fem, treat='ind_indep_var_fem', mediator='ind_mediator_fem', boot=F)
#summary(ind_results_fem)
plot(ind_indep_var, ind_dep_var, xlab="Employment in industry %",
ylab="GDP per capita (constant 2010 USD)", main="Scatter Plot of GDP per cap ~ Employment in industry", pch=19,
col=c("blue"))
ind_group_tot <- c(ind.totaleffect$coefficients[2],ind.totaleffect_fem$coefficients[2])
ind_group_tot_p <- c(summary(ind.totaleffect)$coefficients[2,4], summary(ind.totaleffect_fem)$coefficients[2,4])
ind_group_mediator <- c(ind.ind_mediator$coefficients[2],ind.ind_mediator_fem$coefficients[2])
ind_group_mediator_p <- c(summary(ind.ind_mediator)$coefficients[2,4], summary(ind.ind_mediator_fem)$coefficients[2,4])
ind_group_IM <- c(ind.dv$coefficients[2],ind.dv_fem$coefficients[2])
ind_group_IM_med <- c(ind.dv$coefficients[3],ind.dv_fem$coefficients[3])
ind_group_IM_p <- c(summary(ind.dv)$coefficients[2,4], summary(ind.dv_fem)$coefficients[2,4])
ind_group_IM_med_p <- c(summary(ind.dv)$coefficients[3,4], summary(ind.dv_fem)$coefficients[3,4])
ind_group_dv <- c(ind_results$d0, ind_results_fem$d0)
ind_group_dv_p <- c(ind_results$d0.p, ind_results_fem$d0.p)
ind_group_analysis <- data.frame(ind_group_tot,ind_group_tot_p, ind_group_mediator, ind_group_mediator_p, paste(round(ind_group_IM,3), round(ind_group_IM_med,3) , sep="/"),paste(round(ind_group_IM_p,3), round(ind_group_IM_med_p,3) , sep="/"),ind_group_dv, ind_group_dv_p)
ind_group_analysis %>% mutate_if(is.numeric, round, digits=3) -> ind_group_analysis
rownames(ind_group_analysis) <- c("Youth", "Female")
kable(ind_group_analysis,  col.names = c("I->D",
"p-value",
"I->M",
"p-value",
"I+M->D",
"p-value",
"ACME",
"p-value"),caption = "Sector: Industry. Linear regression coefficients, p-values obtained from mediation analysis. For the column I+M -> D, coefficients for I and M from the joint regression are shown. ACME is the Average Causal Mediation Effect") %>% kable_material(c("striped", "hover"))
# Mediation analysis (GDP, unemp_youth, empl_services)
ser_dep_var <- onedf_filt$gdp
ser_indep_var <- onedf_filt$employment_services
ser_indep_var_fem <- onedf_filt$employment_services
ser_mediator <- onedf_filt$unemployment_youth
ser_mediator_fem <- onedf_filt$unemployment_female
ser_df_mediation <- data.frame(ser_indep_var,ser_mediator,ser_dep_var)
ser_df_mediation_fem <- data.frame(ser_indep_var_fem,ser_mediator_fem,ser_dep_var)
ser.totaleffect=lm(ser_dep_var~ser_indep_var, ser_df_mediation)
#summary(ser.totaleffect)
ser.totaleffect_fem=lm(ser_dep_var~ser_indep_var_fem, ser_df_mediation_fem)
#summary(ser.totaleffect_fem)
ser.ser_mediator=lm(ser_mediator~ser_indep_var,ser_df_mediation)
#summary(ser.ser_mediator)
ser.ser_mediator_fem=lm(ser_mediator_fem~ser_indep_var_fem,ser_df_mediation_fem)
#summary(ser.ser_mediator_fem)
ser.dv=lm(ser_dep_var~ser_indep_var+ser_mediator,ser_df_mediation)
#summary(ser.dv)
ser.dv_fem=lm(ser_dep_var~ser_indep_var_fem+ser_mediator_fem,ser_df_mediation_fem)
#summary(ser.dv_fem)
ser_results = mediate(ser.ser_mediator, ser.dv, treat='ser_indep_var', mediator='ser_mediator', boot=F)
#summary(ser_results)
ser_results_fem = mediate(ser.ser_mediator_fem, ser.dv_fem, treat='ser_indep_var_fem', mediator='ser_mediator_fem', boot=F)
#summary(ser_results_fem)
plot(ser_indep_var, ser_dep_var, xlab="Employment in service %",
ylab="GDP per capita (constant 2010 USD)", main="Scatter Plot of GDP per cap ~ Employment in service", pch=19,
col=c("blue"))
ser_group_tot <- c(ser.totaleffect$coefficients[2],ser.totaleffect_fem$coefficients[2])
ser_group_tot_p <- c(summary(ser.totaleffect)$coefficients[2,4], summary(ser.totaleffect_fem)$coefficients[2,4])
ser_group_mediator <- c(ser.ser_mediator$coefficients[2],ser.ser_mediator_fem$coefficients[2])
ser_group_mediator_p <- c(summary(ser.ser_mediator)$coefficients[2,4], summary(ser.ser_mediator_fem)$coefficients[2,4])
ser_group_IM <- c(ser.dv$coefficients[2],ser.dv_fem$coefficients[2])
ser_group_IM_med <- c(ser.dv$coefficients[3],ser.dv_fem$coefficients[3])
ser_group_IM_p <- c(summary(ser.dv)$coefficients[2,4], summary(ser.dv_fem)$coefficients[2,4])
ser_group_IM_med_p <- c(summary(ser.dv)$coefficients[3,4], summary(ser.dv_fem)$coefficients[3,4])
ser_group_dv <- c(ser_results$d0, ser_results_fem$d0)
ser_group_dv_p <- c(ser_results$d0.p, ser_results_fem$d0.p)
ser_group_analysis <- data.frame(ser_group_tot,ser_group_tot_p, ser_group_mediator, ser_group_mediator_p, paste(round(ser_group_IM,3), round(ser_group_IM_med,3) , sep="/"),paste(round(ser_group_IM_p,3), round(ser_group_IM_med_p,3) , sep="/"),ser_group_dv, ser_group_dv_p)
ser_group_analysis %>% mutate_if(is.numeric, round, digits=3) -> ser_group_analysis
rownames(ser_group_analysis) <- c("Youth", "Female")
kable(ser_group_analysis,  col.names = c("I->D",
"p-value",
"I->M",
"p-value",
"I+M->D",
"p-value",
"ACME",
"p-value"),caption = "Sector: Services. Linear regression coefficients, p-values obtained from mediation analysis. For the column I+M -> D, coefficients for I and M from the joint regression are shown. ACME is the Average Causal Mediation Effect") %>% kable_material(c("striped", "hover"))
download.file(
"https://development-data-hub-s3-public.s3.amazonaws.com/ddhfiles/1202896/country_migration_public.csv",
destfile = "CountryMigration.csv")
download.file(
"https://development-data-hub-s3-public.s3.amazonaws.com/ddhfiles/1202896/industry_migration_public.csv",
destfile = "IndustryMigration.csv")
countrydf_raw <- read.csv("CountryMigration.csv", header = T, sep = ",", fileEncoding="UTF-8-BOM")
industrydf_raw <- read.csv("IndustryMigration.csv", header = T, sep = ",", fileEncoding="UTF-8-BOM")
countrydf <-countrydf_raw %>%
filter(base_country_wb_region == "Europe & Central Asia") %>%
filter(target_country_wb_region == "Europe & Central Asia")
industrydf <-industrydf_raw %>%
filter(wb_region == "Europe & Central Asia")
WDIdf <- WDI(indicator=c("NY.GDP.PCAP.KD","NY.GDP.MKTP.KD.ZG"),
#WDIdf <- WDI(indicator=c("NY.GDP.PCAP.PP.CD","NY.GDP.MKTP.KD.ZG"),
country ="all", start = 2015, end = 2019, extra = F) %>%
# select(country, year, NY.GDP.PCAP.PP.CD, NY.GDP.MKTP.KD.ZG) %>%
select(country, year, NY.GDP.PCAP.KD, NY.GDP.MKTP.KD.ZG) %>%
rename(GDPpc = NY.GDP.PCAP.KD,
#  rename(GDPpc = NY.GDP.PCAP.PP.CD,
GDPgrowth = NY.GDP.MKTP.KD.ZG)
countrydf_merged <- countrydf %>%
pivot_longer(cols = starts_with("net_per_10K_"),
names_to = "year",
names_prefix = "net_per_10K_",
names_transform = list(year = as.integer),
values_to = "net_per_10K",
values_transform = list(net_per_10K = as.double)) %>%
inner_join(WDIdf,  by = c("base_country_name" = "country", "year")) %>%
inner_join(WDIdf, by = c("target_country_name" = "country", "year")) %>%
rename(base_country_GDPpc = GDPpc.x,
target_country_GDPpc = GDPpc.y,
base_country_GDPgrowth = GDPgrowth.x,
target_country_GDPgrowth = GDPgrowth.y,
migrationFlux_per10k = net_per_10K) %>%
select(year, base_country_code, base_country_name,
base_country_GDPpc, base_country_GDPgrowth,
target_country_code, target_country_name,
target_country_GDPpc, target_country_GDPgrowth,
migrationFlux_per10k)
#countrydf_merged %>%
#  head(n = 10) %>%
#  kable(booktabs = T,
#             caption = "First ten rows of the migration flux database.",
#              label = "{tab:migrationFlux}")  %>%
#  kable_minimal()
countrydf_tot <- countrydf_merged %>%
mutate(base_country_GDPpc = base_country_GDPpc/1000) %>%
filter(base_country_code != "lu") %>%
group_by(base_country_code, base_country_name, year, base_country_GDPpc) %>%
summarise(totalflux = sum(migrationFlux_per10k))
model_list <- lapply(2015:2019, function(y){
countrydf_tot %>%
filter(year == y) %>%
lm(totalflux ~base_country_GDPpc, data = .) %>%
summary %>%
coefficients %>%
as.data.frame() %>%
select(Estimate,
"Std. Error") %>%
mutate(year = y) %>%
rename(stderr = "Std. Error") %>%
tail(1)
})
model_list_sum <- do.call("rbind", lapply(2015:2019, function(y){
countrydf_tot %>%
filter(year == y) %>%
lm(totalflux~base_country_GDPpc, data = .) %>%
summary %>%
glance %>%
as.data.frame() %>%
select(r.squared, p.value) %>%
mutate(year = y)
}))
model_min <- model_list_sum %>%
filter(r.squared ==min(r.squared))
model_max <- model_list_sum %>%
filter(r.squared ==max(r.squared))
countrydf_tot %>%
mutate(year = as.character(year)) %>%
ggplot(aes(x = base_country_GDPpc, y = totalflux, color = year)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(x = "GDP per capita (x10^3)",
y = "Migration flux (per 10k LinkedIN users)") +
theme_bw(base_size = 20)
do.call("rbind", model_list) %>%
ggplot(aes(x = year, y = Estimate)) +
geom_segment(aes(x = year, xend = year, y = (Estimate - stderr),
yend = (Estimate + stderr)),
color = "darkgray", size = 1.5, alpha = 1) +
geom_point(size = 4, color = "#F55D5D") +
labs(x = "Year", y= "Coefficient") +
theme_bw(base_size = 20)
countrydf_tot %>%
filter(year == model_min$year) %>%
lm(totalflux~base_country_GDPpc, data = .) %>%
summary %>%
residuals %>%
as.data.frame() %>%
ggplot(aes(.)) +
geom_histogram(binwidth = 5, fill = I("grey"), col = I("black")) +
labs(title = paste("year", as.character(model_min$year), sep = " "),
x = "Residuals") +
theme_bw(base_size = 20)  +
theme(plot.title = element_text(hjust = 0.5))
countrydf_tot %>%
filter(year == model_max$year) %>%
lm(totalflux~base_country_GDPpc, data = .) %>%
summary %>%
residuals %>%
as.data.frame() %>%
ggplot(aes(.)) +
geom_histogram(binwidth = 5, fill = I("grey"), col = I("black")) +
labs(title = paste("year", as.character(model_max$year), sep = " "),
x = "Residuals") +
theme_bw(base_size = 20)  +
theme(plot.title = element_text(hjust = 0.5))
originalCoeff <- countrydf_tot %>%
filter(year == 2015) %>%
lm(totalflux~base_country_GDPpc, data = .) %>%
summary %>%
coefficients
returnCoeff2 <- function(datav, sampleindices){
d <- lm(datav$totalflux[sampleindices]~datav$base_country_GDPpc[sampleindices]);
return (d$coefficients[2])
}
bootResults <- countrydf_tot %>%
filter(year == 2015) %>%
boot(statistic = returnCoeff2, R = 10000)
bootResults$t %>%
as.data.frame() %>%
ggplot(aes(x = V1)) +
geom_histogram(binwidth = 0.03, fill = I("grey"), col = I("black")) +
labs(x = "Interpolating coefficient") +
theme_bw(base_size = 15) +
geom_segment(aes(x = originalCoeff[2], xend = originalCoeff[2],
y = 0, yend = 1000),
colour = "red", size = 1.5)
countrydf_growth <- countrydf_merged %>%
filter(base_country_code != "lu") %>%
group_by(base_country_code, base_country_name, year, base_country_GDPgrowth) %>%
summarise(totalflux = sum(migrationFlux_per10k))
model_list_growth<- do.call("rbind", lapply(2015:2019, function(y){
countrydf_growth %>%
filter(year == y) %>%
lm(totalflux~base_country_GDPgrowth, data = .) %>%
summary %>%
glance %>%
as.data.frame() %>%
select(r.squared, p.value) %>%
mutate(year = y)
}))
countrydf_growth %>%
mutate(year = as.character(year)) %>%
ggplot(aes(y = base_country_GDPgrowth, x = totalflux, color = year)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(y = "GDP growth (%)", x = "Migration flux (per 10k LinkedIN users)") +
theme_bw(base_size = 15)
countrysumm_df <- countrydf_merged %>%
filter(year == 2015, !base_country_code %in% c("lu", "ch")) %>%
group_by(base_country_code, base_country_GDPpc, base_country_GDPgrowth) %>%
summarise(migrationFlux = sum(migrationFlux_per10k)) %>%
rename(GDPpc = base_country_GDPpc,
GDPgrowth = base_country_GDPgrowth)
consideredIndustries = c("I", "N", "R", "D", "Q", "C", "A", "B", "K", "G", "H", "F")
industryGrowth_df <- industrydf %>%
filter(isic_section_index %in% consideredIndustries) %>%
inner_join(countrysumm_df, by = c("country_code" = "base_country_code")) %>%
group_by(isic_section_index, isic_section_name, GDPpc, country_code, GDPgrowth, migrationFlux) %>%
summarise(growth = mean(net_per_10K_2015)) %>%
mutate(isic_section_name = paste(isic_section_index, isic_section_name, sep = "-"))
industryGrowth_df %>%
ggplot(aes(x = migrationFlux, y = growth, color = isic_section_index)) +
geom_point() +
geom_smooth(method = "lm", se = F) +
labs(x = "Migration flux (per 10k)") +
labs(y = "Industry growth(per 10k)") +
theme_bw(base_size = 20)
industryGrowthvsM_lm2019 <- industryGrowth_df %>%
group_by(isic_section_name) %>%
do(glance(lm(growth~migrationFlux, data = .))) %>%
select(r.squared, statistic)
model_list_industry <- lapply(consideredIndustries, function(i){
industryGrowth_df %>%
filter(isic_section_index == i) %>%
lm(growth~migrationFlux, data = .) %>%
summary %>%
coefficients %>%
as.data.frame() %>%
select(Estimate,
"Std. Error") %>%
mutate(isic_section_index = i) %>%
rename(stderr = "Std. Error") %>%
tail(1)
})
model_list_industry_sum <- do.call("rbind", lapply(consideredIndustries, function(i){
industryGrowth_df %>%
filter(isic_section_index == i) %>%
lm(growth~migrationFlux, data = .) %>%
summary %>%
glance %>%
as.data.frame() %>%
select(r.squared, p.value) %>%
mutate(isic_sector = i)
}))
do.call("rbind", model_list_industry) %>%
ggplot(aes(x = isic_section_index, y = Estimate)) +
geom_segment(aes(x = isic_section_index, xend = isic_section_index, y = (Estimate - stderr),
yend = (Estimate + stderr)),
color = "darkgray", size = 1.5, alpha = 1) +
geom_point(size = 4, color = "#F55D5D") +
labs(x = "Isic Section Index", y= "Coefficient") +
theme_bw(base_size = 20)
model_list_industry_sum %>%
arrange(isic_sector) %>%
mutate(r.squared = signif(r.squared, digits = 3),
p.value = signif(p.value, digits = 3)) %>%
select(isic_sector, p.value, r.squared) %>%
rename("P value" = p.value,
"R^2^" = r.squared) %>%
t() %>%
kable(booktabs = T,
caption = "R squared and p values for the fit of industry growth due to migration vs migration flux.    \\label{tab:industryGrowth}")  %>%
kable_minimal()
